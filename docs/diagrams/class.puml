@startuml ProSoft - EasySave 2.1.0 - Class Diagram

title "ProSoft - EasySave 2.1.0 - Class Diagram"

class Program <<static>> {
    - {static} Main() : void
}

package ViewModels <<Folder>> {

    class HomeViewModel {
        + HomeViewModel()
        + {static} IsUpToDate() : bool
    }

    class NavigationViewModel {
        - navigationItemsCollection : CollectionViewSource
        + NavigationSourceCollection : ICollectionView
        - selectedViewModel : object
        + SelectedViewModel : object
        - closeAppCommand : ICommand
        + CloseAppCommand : ICommand
        - backHome : ICommand
        + BackHome : ICommand
        - menuCommand : ICommand
        + MenuCommand : ICommand
        + NavigationViewModel()
        - ShowHome() : void
        + CloseApp(obj : object) : void
        + SwitchViews(parameter : string) : void
        - OnPropertyChanged(propName : string) : void
    }

    class SaveViewModel {
        - saveItemsCollection : CollectionViewSource
        + SaveSourceCollection : ICollectionView
        + SaveViewModel()
        + GetSaves() : HashSet<string>
        + CreateSave(name : string, src : string, dest : string, type : SaveType) : Save
        + EditSave(s : Save, newName : string) : void
        + DeleteSave(s : Save) : void
        + RunSave(s : Save) : string
        # {static} StopAllSaves() : void
        + GetSavesByUuid(names : HashSet<String>) : HashSet<Save>
    }

    class SettingsViewModel {
        - settingsItemsCollection : CollectionViewSource
        + SettingsSourceCollection : ICollectionView
        + SettingsViewModel()
    }

}

package Render <<Folder>> {

    interface IView {
        + Start() : void
        + Render(type : RenderMethod) : void
    }

    enum RenderMethod {
        Home
        CreateSave
        LoadSave
        EditSave
        DeleteSave
        ChangeLanguage
        Settings,
        ChangeLogsFormat
    }

    class View {
        - vm : ViewModel

        + View()

        + Start() : void
        + Render(view : IView) : void
        # Exit(code : int) : void
        - CheckUpdate() : string
    }

    class HomeView {
        - vm : ViewModel

        + HomeView()

        + Start() : void
        + Render(type : RenderMethod) : void
    }

    class SaveView {
        - vm : ViewModel

        + SaveView()

        + Start() : void
        + Render(type : RenderMethod) : void
        - RenderCreate() : void
        - RenderEdit() : void
        - RenderDelete() : void
        - RenderLoad() : void
    }

    class SettingsView {
        - vm : ViewModel

        + SettingsView()

        + Start() : void
        + Render(type : RenderMethod) : void
        - RenderChangeLanguage() : void
        - RenderChangeLogsFormat() : void
    }

}

'OK


package Models <<Folder>> {

    Interface Dir {
        - path : string
    }

    class SrcDir {
        - size : double
        + nbFiles : long

        + SrcDir(path : string)

        + GetSize() : double
    }

    class DestDir {
        + DestDir(path : string)
    }

    package Exceptions <<Folder>> {
    
        class Exception {

        }

        class UnknownLogFormatException {

            + UnknownLogFormatException()
            + UnknownLogFormatException(message : string)
            + UnknownLogFormatException(message : string, inner : Exception)
            + UnknownLogFormatException(info : SerializationInfo, context : StreamingContext)
        } 

        class CantCheckUpdateException {

            + CantCheckUpdateException()
            + CantCheckUpdateException(message : string)
            + CantCheckUpdateException(message : string, inner : Exception)
            + CantCheckUpdateException(info : SerializationInfo, context : StreamingContext)
        } 

        class TooMuchSavesException {

            + TooMuchSavesException()
            + TooMuchSavesException(message : string)
            + TooMuchSavesException(message : string, inner : Exception)
            + TooMuchSavesException(info : SerializationInfo, context : StreamingContext)
        }

    }
    
    package Data <<Folder>> {

        abstract class Save {
            + {const} MAX_SAVES : int
            - {static} saves : Set<Save>
            + uuid : Guid
            - name : string
            - filesCopied : long
            - sizeCopied : long
            # status : JobStatus
            + SrcDir : SrcDir
            + DestDir : DestDir

            # Save(name: string, src : string, dest : string, guid : Guid, status : JobStatus)

            + {static} CreateSave(name : string, src: Dir, dest : Dir, type : SaveType) : Save
            + Rename(newName : string) : void
            + Pause() : void
            + Resume() : void
            + Cancel() : void
            + Stop() : void
            + {static} Delete(uuid : Guid) : void
            + Run() : string
            + CalculateProgress() : int
            + {abstract} ToString() : string
            + {static} Init(data : dynamic) : void
            + AddFileCopied(nb : int) : void
            + AddSizeCopied(length : long) : void
            # ProcessResult(sw : StopWatch) : string
            + {static} GetSaves() : HashSet<save>
            + GetName() : string
            + GetStatus() : JobStatus
            + {static} GetStatus(status : String) : JobStatus
            + GetSizeCopied() : long
            + GetFilesCopied() : long
            + {abstract} GetSaveType() : SaveType
            - UpdateState() : void
        }            

        class DifferentialSave {
            # DifferentialSave(name : string, src: string, dest : string, guid : Guid, status : JobStatus)

            + GetSaveType() : SaveType
            + ToString() : string
        }

        class FullSave {
            # FullSave(name : string, src: string, dest : string, guid : Guid, status : JobStatus)

            + GetSaveType() : SaveType
            + ToString() : string
        }

        enum SaveType {
            Full
            Differential
        }

        enum JobStatus {
            Running
            Paused
            Finished
            Cancelled
            Error
            Waiting
        }
        
    }

}

package Utils <<Folder>> {

    enum LogsFormat {
        JSON
        XML
    }

    class DirectoryUtils <<static>> {
        - {static} extension : HashSet<string>
        - {static} secret : string
        - {static} actualFile : string[]

        + {static} CopyFilesAndFolders(s : Save) : void
        - {static} CopyAll(s : Save, src : DirectoryInfo, dest : DirectoryInfo, type : SaveType) : void
        + {static} IsValidPath(path : string) : bool
        + {static} CreatePath(path : string) : void
        + {static} GetDirectorySize(dir : DirectoryInfo) : double
        + {static} GetDirectoryFiles(dir : DirectoryInfo) : long
        - {static} GetActualFile() : string[]
        + {static} ChangeKey(newSecret : string) : void
        + {static} ChangeExtensions(newExtensions : HashSet<string>) : void
        - {static} UpdateConfig() : void
        + {static} GetSecret() : string
        + {static} GetExtensions() : HashSet<string>
    }

    class LogUtils <<static>> {
        - {static} path : string
        - {static} date : string
        - {static} format : LogsFormat

        + {static} Init() : void
        + {static} LogSaves() : void
        - {static} SavesToJson() : JObject
        - {static} SavesToXml() : XElement
        + {static} SaveToJson(s : Save) : JObject
        + {static} SaveToXml(s : Save) : XElement
        + {static} LogTransfer(s : Save, sourcePath : stirng, destPath : String, fileSize : long, fileTransferTime : float) : void
        + {static} ChangeFormat(format : LogsFormat) : void
        + {static} LogConfig(key : string, extensions : HashSet<string>) : void
        + {static} GetFormat() : LogsFormat
    }

    class VersionUtils <<static>> {
        + {static} GetVersionFromGit() : string
        + {static} VersionFromStr(version : string) : int[]
        + {static} CompareVersions() : bool
    }

}

View "1..*" o------ "1" ViewModel
Save "*" *-- "1" SrcDir
Save "*" *-- "1" DestDir
Save "*" o------ "1" JobStatus

Dir <|.. SrcDir
Dir <|.. DestDir

Save <|.. FullSave
Save <|.. DifferentialSave

HomeView .up.|> IView
SaveView .up.|> IView
SettingsView .up.|> IView

CantCheckUpdateException -up-|> Exception
TooMuchSavesException -up-|> Exception
UnknownLogFormatException -up-|> Exception

NavigationViewModel -up-|> INotifyPropertyChanged
SaveViewModel -up-|> INotifyPropertyChanged
SettingsViewModel -up-|> INotifyPropertyChanged

/'Hidden links for organization'/
FullSave -down[hidden]-> JobStatus


@enduml